# Generated by Django 5.2.4 on 2025-07-16 10:21

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FitnessClub",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Уникальное название фитнес-клуба.",
                        max_length=100,
                        unique=True,
                        verbose_name="Название зала",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        help_text="Полный адрес фитнес-клуба.",
                        max_length=255,
                        null=True,
                        verbose_name="Адрес",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Контактный телефон фитнес-клуба.",
                        max_length=12,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона клуба должен начинаться с +7 или 8 и содержать 10 цифр.",
                                regex="^(?:\\+7|8)\\d{10}$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Краткое описание фитнес-клуба.",
                        null=True,
                        verbose_name="Описание",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата последнего изменения"
                    ),
                ),
            ],
            options={
                "verbose_name": "Фитнес-клуб",
                "verbose_name_plural": "Фитнес-клубы",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="trainers_fi_name_277989_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Trainer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Подробное описание квалификации и опыта тренера.",
                        null=True,
                        verbose_name="Описание",
                    ),
                ),
                (
                    "specialization",
                    models.CharField(
                        blank=True,
                        help_text="Основная специализация тренера (например, 'силовые тренировки', 'йога').",
                        max_length=100,
                        null=True,
                        verbose_name="Специализация",
                    ),
                ),
                (
                    "experience_years",
                    models.IntegerField(
                        blank=True,
                        help_text="Количество лет опыта работы тренером.",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                0, message="Опыт не может быть отрицательным."
                            ),
                            django.core.validators.MaxValueValidator(
                                60, message="Опыт не может превышать 60 лет."
                            ),
                        ],
                        verbose_name="Опыт (лет)",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания профиля"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата последнего обновления профиля"
                    ),
                ),
                (
                    "clubs",
                    models.ManyToManyField(
                        help_text="Список фитнес-клубов, где работает тренер.",
                        related_name="trainers",
                        to="trainers.fitnessclub",
                        verbose_name="Фитнес-клубы, в которых работает",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="Привязанный пользователь с ролью 'тренер'.",
                        limit_choices_to={"role": "trainer"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trainer_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тренер",
                "verbose_name_plural": "Тренеры",
                "ordering": ["user__last_name", "user__first_name"],
            },
        ),
    ]
